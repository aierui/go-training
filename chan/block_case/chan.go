package main

func main() {
	// 会造成阻塞的几种情况
	// 示例1。
	ch1 := make(chan int, 1)
	ch1 <- 1
	//ch1 <- 2 // 通道已满，因此这里会造成阻塞。

	// 示例2。
	ch2 := make(chan int, 1)
	//elem, ok := <-ch2 // 通道已空，因此这里会造成阻塞。
	//_, _ = elem, ok
	ch2 <- 1

	// 示例3。
	var ch3 chan int
	//ch3 <- 1 // 通道的值为nil，因此这里会造成永久的阻塞！
	//<-ch3 // 通道的值为nil，因此这里会造成永久的阻塞！
	_ = ch3

	/**
	它们的基本特性如下。
	对于同一个通道，发送操作之间是互斥的，接收操作之间也是互斥的。
	发送操作和接收操作中对元素值的处理都是不可分割的。
	发送操作在完全完成之前会被阻塞。接收操作也是如此。
	*/
}
